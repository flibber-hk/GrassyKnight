<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ProjectGuid>{542DBA18-73A8-4824-8BB3-00B43529701F}</ProjectGuid>
    <TargetFramework>net472</TargetFramework>
    <RootNamespace>GrassyKnight</RootNamespace>
    <AssemblyTitle>GrassyKnight</AssemblyTitle>
    <AssemblyVersion>2.1.0.*</AssemblyVersion>
    <Deterministic>false</Deterministic>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <HollowKnightRefs>API</HollowKnightRefs>
    <ExportDir>bin\Publish</ExportDir>
  </PropertyGroup>

  <!--Backward compatibility-->
  <PropertyGroup Condition="Exists('..\..\..\..\..\Program Files (x86)\Steam\steamapps\common\Hollow Knight\hollow_knight_Data\Managed\Assembly-CSharp.dll')">
    <HollowKnightRefs>..\..\..\..\..\Program Files (x86)\Steam\steamapps\common\Hollow Knight\hollow_knight_Data\Managed</HollowKnightRefs>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('/Users/johnsullivan/Library/Application Support/Steam/steamapps/common/Hollow Knight/hollow_knight.app/Contents/Resources/Data/Managed/Assembly-CSharp.dll')">
    <HollowKnightRefs>/Users/johnsullivan/Library/Application Support/Steam/steamapps/common/Hollow Knight/hollow_knight.app/Contents/Resources/Data/Managed</HollowKnightRefs>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('..\..\..\Desktop\Hollow Knight\hollow_knight_Data\Managed\Assembly-CSharp.dll')">
    <HollowKnightRefs>..\..\..\Desktop\Hollow Knight\hollow_knight_Data\Managed</HollowKnightRefs>
  </PropertyGroup>

  <!--Gitignored local build properties file to modify the HollowKnightRefs value without needing to change anything in the remote.-->
  <Import Project="LocalBuildProperties.props" Condition="Exists('LocalBuildProperties.props')" />


  <ItemGroup>
    <Reference Include="Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="GrassRando">
      <HintPath>$(HollowKnightRefs)\Mods\Grass Randomizer\GrassRandoV2.dll</HintPath>
    </Reference>
    <Reference Include="ItemChanger">
      <HintPath>$(HollowKnightRefs)\Mods\ItemChanger\ItemChanger.dll</HintPath>
    </Reference>
    <Reference Include="MMHOOK_Assembly-CSharp, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(HollowKnightRefs)\MMHOOK_Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="MMHOOK_PlayMaker, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(HollowKnightRefs)\MMHOOK_PlayMaker.dll</HintPath>
    </Reference>
    <Reference Include="MonoMod.Utils">
      <HintPath>$(HollowKnightRefs)\MonoMod.Utils.dll</HintPath>
    </Reference>
    <Reference Include="PlayMaker, Version=1.6.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\PlayMaker.dll</HintPath>
    </Reference>
    <Reference Include="RandomizerMod" Condition="Exists('$(HollowKnightRefs)\Mods\RandomizerMod')">
      <HintPath>$(HollowKnightRefs)\Mods\RandomizerMod\RandomizerMod.dll</HintPath>
    </Reference>
    <Reference Include="RandomizerMod" Condition="Exists('$(HollowKnightRefs)\Mods\Randomizer 4')">
      <HintPath>$(HollowKnightRefs)\Mods\Randomizer 4\RandomizerMod.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(HollowKnightRefs)\UnityEngine.ImageConversionModule.dll</HintPath>
    </Reference>
  <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(HollowKnightRefs)\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.JSONSerializeModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.JSONSerializeModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(HollowKnightRefs)\UnityEngine.Physics2DModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(HollowKnightRefs)\UnityEngine.UIModule.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Remove="img/*.png" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="img/*.png" />
  </ItemGroup>

  <Target Name="ClearReferenceCopyLocalPaths" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>
  
  <Target Name="CopyMod" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(TargetPath);$(TargetDir)$(TargetName).pdb" DestinationFolder="$(HollowKnightRefs)\Mods\$(TargetName)" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CreateReleaseZip" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
    <RemoveDir Directories="$(ExportDir)/$(TargetName)/" />
    <MakeDir Directories="$(ExportDir)/$(TargetName)/" />
    <MakeDir Directories="$(ExportDir)/$(TargetName)/zip/" />
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ExportDir)/$(TargetName)/" />
    <Copy SourceFiles="README.md;LICENSE;ALL_KEYBOARD_KEY_NAMES.txt;screenshot.png;$(TargetPath);$(TargetDir)/$(TargetName).pdb" DestinationFolder="$(ExportDir)/$(TargetName)/zip/" />
    <ZipDirectory SourceDirectory="$(ExportDir)/$(TargetName)/zip/" DestinationFile="$(ExportDir)/$(TargetName)/$(TargetName).zip" />

    <GetFileHash Files="$(ExportDir)/$(TargetName)/$(TargetName).zip" Algorithm="SHA256">
      <Output TaskParameter="Items" ItemName="FilesWithHashes" />
    </GetFileHash>
    <Message Importance="High" Text="@(FilesWithHashes->'%(Identity): %(FileHash)')" />
    <WriteLinesToFile File="$(ExportDir)/$(TargetName)/metadata/SHA.txt" Lines="@(FilesWithHashes->'%(FileHash)')" Overwrite="true" Encoding="UTF-8" />

    <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
      <Output TaskParameter="Assemblies" ItemName="Targets" />
    </GetAssemblyIdentity>
    <ItemGroup>
      <VersionNumber Include="@(Targets->'%(Version)')" />
    </ItemGroup>
    <WriteLinesToFile File="$(ExportDir)/$(TargetName)/metadata/version.txt" Lines="@(VersionNumber)" Overwrite="true" Encoding="UTF-8" />
  </Target>    

</Project>
